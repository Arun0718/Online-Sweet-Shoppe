[{"D:\\Teams\\Preethi\\New folder\\src\\index.js":"1","D:\\Teams\\Preethi\\New folder\\src\\App.js":"2","D:\\Teams\\Preethi\\New folder\\src\\reportWebVitals.js":"3","D:\\Teams\\Preethi\\New folder\\src\\Component\\HomeBg.js":"4","D:\\Teams\\Preethi\\New folder\\src\\Component\\SweetList.js":"5","D:\\Teams\\Preethi\\New folder\\src\\Component\\Navbar.js":"6","D:\\Teams\\Preethi\\New folder\\src\\Component\\MyToast.js":"7","D:\\Teams\\Preethi\\New folder\\src\\Component\\Customer.js":"8","D:\\Teams\\Preethi\\New folder\\src\\services\\index.js":"9","D:\\Teams\\Preethi\\New folder\\src\\services\\user\\auth\\authActions.js":"10","D:\\Teams\\Preethi\\New folder\\src\\services\\user\\auth\\authTypes.js":"11","D:\\Teams\\Preethi\\New folder\\src\\Component\\PlaceOrder.js":"12","D:\\Teams\\Preethi\\New folder\\src\\serviceWorker.js":"13","D:\\Teams\\Preethi\\New folder\\src\\services\\store.js":"14","D:\\Teams\\Preethi\\New folder\\src\\services\\rootReducer.js":"15","D:\\Teams\\Preethi\\New folder\\src\\services\\user\\auth\\authReducer.js":"16","D:\\Teams\\Preethi\\New folder\\src\\Component\\SweetActions.js":"17","D:\\Teams\\Preethi\\New folder\\src\\Component\\LoginCust.js":"18","D:\\Teams\\Preethi\\New folder\\src\\Component\\Signup.js":"19","D:\\Teams\\Preethi\\New folder\\src\\Service\\UserService.js":"20","D:\\Teams\\Preethi\\New folder\\src\\Component\\CustomerNav.js":"21","D:\\Teams\\Preethi\\New folder\\src\\Component\\Sweet.js":"22","D:\\Teams\\Preethi\\New folder\\src\\Component\\Login.js":"23","D:\\Teams\\Preethi\\New folder\\src\\Component\\Logout.js":"24","D:\\Teams\\Preethi\\New folder\\src\\Component\\User.js":"25","D:\\Teams\\Preethi\\New folder\\src\\Component\\UserNav.js":"26","D:\\Teams\\Preethi\\New folder\\src\\Component\\OrderActions.js":"27"},{"size":638,"mtime":1611766964715,"results":"28","hashOfConfig":"29"},{"size":1904,"mtime":1611830557850,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":251,"mtime":1611729774971,"results":"32","hashOfConfig":"29"},{"size":2385,"mtime":1611827743277,"results":"33","hashOfConfig":"29"},{"size":1497,"mtime":1611821500077,"results":"34","hashOfConfig":"29"},{"size":1075,"mtime":1611740394000,"results":"35","hashOfConfig":"29"},{"size":833,"mtime":1611820442746,"results":"36","hashOfConfig":"29"},{"size":50,"mtime":1611764196792,"results":"37","hashOfConfig":"29"},{"size":655,"mtime":1611764196809,"results":"38","hashOfConfig":"29"},{"size":123,"mtime":1611764196817,"results":"39","hashOfConfig":"29"},{"size":12403,"mtime":1611825023650,"results":"40","hashOfConfig":"29"},{"size":5086,"mtime":1611766861138,"results":"41","hashOfConfig":"29"},{"size":341,"mtime":1611764196802,"results":"42","hashOfConfig":"29"},{"size":200,"mtime":1611764196794,"results":"43","hashOfConfig":"29"},{"size":580,"mtime":1611764196810,"results":"44","hashOfConfig":"29"},{"size":4800,"mtime":1611827449201,"results":"45","hashOfConfig":"29"},{"size":3417,"mtime":1611820596767,"results":"46","hashOfConfig":"29"},{"size":4137,"mtime":1611818845433,"results":"47","hashOfConfig":"29"},{"size":1454,"mtime":1611817501533,"results":"48","hashOfConfig":"29"},{"size":828,"mtime":1611819457096,"results":"49","hashOfConfig":"29"},{"size":9327,"mtime":1611822104928,"results":"50","hashOfConfig":"29"},{"size":4723,"mtime":1611822104929,"results":"51","hashOfConfig":"29"},{"size":732,"mtime":1611822479252,"results":"52","hashOfConfig":"29"},{"size":927,"mtime":1611827357718,"results":"53","hashOfConfig":"29"},{"size":1020,"mtime":1611827292219,"results":"54","hashOfConfig":"29"},{"size":5312,"mtime":1611826817288,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12k48bt",{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"118","usedDeprecatedRules":"62"},"D:\\Teams\\Preethi\\New folder\\src\\index.js",[],"D:\\Teams\\Preethi\\New folder\\src\\App.js",["119","120"],"D:\\Teams\\Preethi\\New folder\\src\\reportWebVitals.js",[],["121","122"],"D:\\Teams\\Preethi\\New folder\\src\\Component\\HomeBg.js",[],"D:\\Teams\\Preethi\\New folder\\src\\Component\\SweetList.js",["123"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nclass SweetList extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={AllSweetData:[]}\r\n  }\r\n  componentDidMount() {\r\n    \r\n    axios.get(`http://localhost:8081/rest/sweets`).then((responseSweetData)=> {\r\n      console.log(responseSweetData);\r\n      this.setState({\r\n        AllSweetData:responseSweetData.data\r\n        });\r\n      });\r\n     \r\n  }\r\n  OrderPage = () =>{\r\n    this.props.history.push('/placeOrder');\r\n}\r\n\r\n  \r\n\r\n  render() {\r\n   \r\n      \r\n    return(\r\n      <div className=\"sweetDisplay\">\r\n        <div class=\"row\">\r\n          {\r\n             this.state.AllSweetData.map(\r\n               sweet=>\r\n           \r\n                 <div class=\"card col-md-3 offset-md-1 \" key={sweet.sweetId}>\r\n                   <div class=\"card-header\">\r\n                   <img\r\n                                className=\"center card-img-top d-block w-100\"\r\n                                src={process.env.PUBLIC_URL + sweet.image}\r\n                                alt=\"image\"\r\n                                width=\"150\"\r\n                                height=\"150\"/>\r\n                                 \r\n                    </div>\r\n                      <div class=\"card-body\">\r\n                    \r\n                        <label>CategoryName:</label>\r\n                        <div> {sweet.categoryName}</div>\r\n                        <label>productName:</label>\r\n                        <div> {sweet.productName}</div>\r\n                        <label>Rate</label>\r\n                        <div> {sweet.rate}</div>\r\n                        <label>OfferName</label>\r\n                        <div> {sweet.offerName}</div>\r\n                        <label>OfferRate</label>\r\n                        <div> {sweet.offerRate}</div>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={this.OrderPage}>Proceed To Order</button>\r\n                    \r\n\r\n                    </div>\r\n                    <Link to={\"/\"} className=\"nav-link\">Back to home page</Link>\r\n                  </div>\r\n \r\n             )\r\n           } \r\n\r\n        </div>\r\n      </div>\r\n         \r\n            \r\n         \r\n      \r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default SweetList;\r\n\r\n","D:\\Teams\\Preethi\\New folder\\src\\Component\\Navbar.js",["124","125"],"D:\\Teams\\Preethi\\New folder\\src\\Component\\MyToast.js",[],"D:\\Teams\\Preethi\\New folder\\src\\Component\\Customer.js",["126","127"],"import CustomerNav from \"./CustomerNav\";\r\nimport { BrowserRouter as Router, Route, Switch,Link,NavLink } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport HomeBg from '../Component/HomeBg';\r\nimport SweetList from \"./SweetList\";\r\n\r\n\r\nclass Customer extends Component {\r\n    state = {};\r\n    render() {\r\n      return (\r\n          <div >\r\n              \r\n        \r\n          <Router>\r\n            <CustomerNav />\r\n            <b><i><center>Customer Page</center></i></b>\r\n            \r\n           <Switch>\r\n           \r\n                <Route exact path=\"/\" component={HomeBg}  />\r\n             \r\n              <Route exact path=\"/SweetList\" component={SweetList}  />\r\n \r\n              \r\n            </Switch>\r\n         </Router>\r\n         </div>\r\n        \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Customer;","D:\\Teams\\Preethi\\New folder\\src\\services\\index.js",[],"D:\\Teams\\Preethi\\New folder\\src\\services\\user\\auth\\authActions.js",[],"D:\\Teams\\Preethi\\New folder\\src\\services\\user\\auth\\authTypes.js",[],"D:\\Teams\\Preethi\\New folder\\src\\Component\\PlaceOrder.js",["128"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class PlaceOrder extends Component {\r\n\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.state.show = false;\r\n        this.orderChange = this.orderChange.bind(this);\r\n        this.submitOrder = this.submitOrder.bind(this);\r\n    }\r\n    initialState = {\r\n        id: '',\r\n        productName: '',\r\n        quantity: '',\r\n        deliveryAddress:'',\r\n        branchCity:'',\r\n        branchState:'',\r\n        event:'',\r\n        nameOnTheCard:'',\r\n        cvv:'',\r\n        expiryDate:'',\r\n        cardNo:'',\r\n    };\r\n\r\n    componentDidMount() {\r\n        const orderId = +this.props.match.params.id;\r\n        if(orderId) {\r\n            this.findOrderById(orderId);\r\n        }\r\n       \r\n    }\r\n    findOrderById = (orderId) => {\r\n        axios.get(\"http://localhost:8081/rest/orders/\"+orderId)\r\n        .then(response => {\r\n            if(response.data != null){\r\n                this.setState({\r\n                    id: response.data.id,\r\n                    productName: response.data.productName,\r\n        quantity:response.data.quantity ,\r\n        deliveryAddress:response.data.deliveryAddress,\r\n        branchCity:response.data.branchCity,\r\n        branchState:response.data.branchState,\r\n        event:response.data.event,\r\n        nameOnTheCard:response.data.nameOnTheCard,\r\n        cvv:response.data.cvv,\r\n        expiryDate:response.data.expiryDate,\r\n        cardNo:response.data.cardNo\r\n                  \r\n            });\r\n        }\r\n    }).catch((error) => {\r\n        console.error(\"Error -\"+error);\r\n    });\r\n};\r\n        \r\n\r\n    resetOrder = () => {\r\n        this.setState(() => this.initialState);\r\n    };\r\n\r\n    submitOrder = event => {\r\n        event.preventDefault();\r\n\r\n        const order = {\r\n            \r\n                   \r\n                    productName: this.state.productName,\r\n                    quantity:this.state.quantity ,\r\n                    deliveryAddress:this.state.deliveryAddress,\r\n                    branchCity:this.state.branchCity,\r\n                    branchState:this.state.branchState,\r\n                    event:this.state.event,\r\n                    nameOnTheCard:this.state.nameOnTheCard,\r\n                    cvv:this.state.cvv,\r\n                    expiryDate:this.state.expiryDate,\r\n                    cardNo:this.state.cardNo\r\n                   \r\n        };\r\n\r\n        axios.post(\"http://localhost:8081/rest/orders\", order)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\"show\":true, \"method\":\"post\"});\r\n                    setTimeout(() => this.setState({\"show\":false}),3000);\r\n                } else {\r\n                    this.setState({\"show\":false});\r\n                }\r\n            });\r\n            this.setState(this.initialState);\r\n        };\r\n\r\n    updateOrder = event => {\r\n        event.preventDefault();\r\n\r\n        const order = {\r\n                    id: this.state.id,\r\n                    productName: this.state.productName,\r\n                    quantity:this.state.quantity ,\r\n                    deliveryAddress:this.state.deliveryAddress,\r\n                    branchCity:this.state.branchCity,\r\n                    branchState:this.state.branchState,\r\n                    event:this.state.event,\r\n                    nameOnTheCard:this.state.nameOnTheCard,\r\n                    cvv:this.state.cvv,\r\n                    expiryDate:this.state.expiryDate,\r\n                    cardNo:this.state.cardNo\r\n                   \r\n        };\r\n        axios.put(\"http://localhost:8081/rest/orders\", order)\r\n        .then(response => {\r\n            if(response.data != null) {\r\n                this.setState({\"show\":true, \"method\":\"put\"});\r\n                setTimeout(() => this.setState({\"show\":false}), 3000);\r\n                setTimeout(() => this.orderList(), 3000);\r\n            } else {\r\n                this.setState({\"show\":false});\r\n            }\r\n        });\r\n\r\n    this.setState(this.initialState);\r\n};\r\n        \r\n\r\n    orderChange = event => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        });\r\n    };\r\n\r\n    orderList = () => {\r\n        return this.props.history.push(\"/OrderActions\");\r\n    };\r\n\r\n\r\n    render() {\r\n        const { productName,quantity,\r\n        deliveryAddress,\r\n        branchCity,\r\n        branchState,\r\n        event,\r\n        nameOnTheCard,\r\n        cvv,\r\n        expiryDate,\r\n        cardNo} = this.state;\r\n        \r\n        return (\r\n            \r\n                \r\n               <div className=\"background-display\">\r\n                   <h2><b><u><center>PLACE ORDER</center></u></b></h2><br />\r\n                   <div class=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                       \r\n                       <form onSubmit={this.handleSubmit} autocomplete=\"off\" >\r\n                <label className=\"Label\"> <b>Product Name:</b> <span style={{ \"color\": \"red\" }}>*</span></label>\r\n                                        <select style={{ \"width\": \"100%\", \"padding\": \"7px 7px\" }}\r\n                                            name=\"productName\"  placeholder=\"ProductName\" className=\"form-control\"\r\n                                            onChange={this.handleInputChange}> <option>Choose The Sweet Product</option>\r\n                                            <option>Gulab Jamun</option>\r\n                                            <option>Jelabi</option>\r\n                                            <option>Mysorepak</option>\r\n                                            <option>RasaGulla</option>\r\n                                            <option>Thirunelveli Halwa</option>\r\n                                            <option>SoanPapdi</option>\r\n                                            <option value={this.state.productName}\r\n                                                        onChange={this.handleInputChange} >{this.productName}\r\n                                                    </option>)\r\n                                            \r\n                                        </select><br />\r\n\r\n                            <label className=\"Label\"> <b>Quantity:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                            <input type=\"number\" name=\"quantity\" placeholder=\"Quantity In gms\" class=\"form-control\" min=\"0.25\" max=\"10.0\" \r\n                             onChange={this.handleInputChange} value={this.state.quantity} required/><br />\r\n\r\n                            <label className=\"Label\"> <b>Delivery Address:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                            <input type=\"text\" name=\"deliveryAddress\" placeholder=\"Delivery Address\" class=\"form-control\"\r\n                             onChange={this.handleInputChange} value={this.state.deliveryAddress} required/><br />\r\n\r\n               \r\n                            <label className=\"Label\"> <b>Branch City:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                                        <select style={{ \"width\": \"100%\", \"padding\": \"7px 7px\" }} placeholder=\"Branch City\"\r\n                                            name=\"branchCity\" className=\"form-control\"\r\n                                            onChange={this.handleInputChange}> <option>Choose Branch City</option>\r\n                                            <option>Coimbatore</option>\r\n                                            <option>Banglore</option>\r\n                                            <option>Pune</option>\r\n                                               \r\n                                                    <option value={this.state.branchCity}\r\n                                                        onChange={this.handleInputChange} >{this.branchCity}\r\n                                                    </option>)\r\n                                            \r\n                                        </select><br />\r\n\r\n                            <label className=\"Label\"> <b>Branch State:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                                        <select style={{ \"width\": \"100%\", \"padding\": \"7px 7px\" }} placeholder=\"Branch State\"\r\n                                            name=\"branchState\" className=\"form-control\"\r\n                                            onChange={this.handleInputChange}> <option>Choose Branch State</option>\r\n                                            <option>TamilNadu</option>\r\n                                            <option>Kerala</option>\r\n                                            <option>Karnataka</option>\r\n                                            <option>Maharastra</option>\r\n                                               \r\n                                                    <option value={this.state.branchState}\r\n                                                        onChange={this.handleInputChange} >{this.branchState}\r\n                                                    </option>)\r\n                                            \r\n                                        </select><br />\r\n\r\n                            <label className=\"Label\"> <b>Event:</b></label>\r\n                                        <select style={{ \"width\": \"100%\", \"padding\": \"7px 7px\" }} placeholder=\"Event\"\r\n                                            name=\"event\" className=\"form-control\"\r\n                                            onChange={this.handleInputChange}> <option>Choose The Event</option>\r\n                                            <option>Bachelor Party</option>\r\n                                             <option>Marriage</option>\r\n                                             <option>Birthday</option>\r\n                                               \r\n                                                    <option value={this.state.event}\r\n                                                        onChange={this.handleInputChange} >{this.event}\r\n                                                    </option>)\r\n                                            \r\n                                        </select><br />\r\n\r\n                            <label className=\"Label\"> <b>Name On The Card:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                            <input type=\"text\" name=\"nameOnTheCard\" placeholder=\"Name On The Card\" class=\"form-control\"\r\n                             onChange={this.handleInputChange} value={this.state.nameOnTheCard} required/><br />\r\n\r\n                            <label className=\"Label\"> <b>Cvv:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                            <input type=\"tel\" name=\"cvv\"  minLength=\"3\" maxLength=\"3\" placeholder=\"Enter CVV Number\" class=\"form-control\"\r\n                             onChange={this.handleInputChange} value={this.state.cvv} required/><br />\r\n\r\n                            <label className=\"Label\"> <b>Expiry Date:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                            <input type=\"text\" name=\"expiryDate\" pattern=\"(?:0[1-9]|1[0-2])/[0-9]{2}\" placeholder=\"Enter Expiry Date MM/YY\" class=\"form-control\"\r\n                             onChange={this.handleInputChange} value={this.state.expiryDate} required/><br />\r\n\r\n                            <label className=\"Label\"> <b>Card No:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                            <input type=\"tel\" name=\"cardNo\" minLength=\"16\" maxLength=\"16\" placeholder=\"Enter The Card Number\" class=\"form-control\" \r\n                             onChange={this.handleInputChange} value={this.state.cardNo} required/><br />\r\n\r\n                \r\n                             \r\n\r\n                \r\n\r\n\r\n\r\n            \r\n                       <center>  <button type=\"submit\" class=\"btn btn-success\" >Place Order Now</button> <tab/><tab/><tab/>\r\n                            \r\n                         <button type=\"submit\" class=\"btn btn-success\" >Confirm Order</button> <tab/><tab/><tab/> \r\n                       \r\n                            <button type=\"submit\" class=\"btn btn-success\" >Add Another Order</button></center> \r\n                        </form>\r\n        \r\n                       \r\n                    </div>\r\n                </div>\r\n                \r\n            \r\n        \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/*import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass PlaceOrder extends Component {\r\n\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.state.show = false;\r\n        this.orderChange = this.orderChange.bind(this);\r\n        this.submitOrder = this.submitOrder.bind(this);\r\n    }\r\n    initialState = {\r\n        id: '',\r\n        productName: '',\r\n        quantity: '',\r\n        deliveryAddress:'',\r\n        branchCity:'',\r\n        branchState:'',\r\n        event:'',\r\n        nameOnTheCard:'',\r\n        cvv:'',\r\n        expiryDate:'',\r\n        cardNo:'',\r\n    };\r\n\r\n    componentDidMount() {\r\n        const orderId = +this.props.match.params.id;\r\n        if(orderId) {\r\n            this.findOrderById(orderId);\r\n        }\r\n       \r\n    }\r\n    findOrderById = (orderId) => {\r\n        axios.get(\"http://localhost:8081/rest/orders/\"+orderId)\r\n        .then(response => {\r\n            if(response.data != null){\r\n                this.setState({\r\n                    id: response.data.id,\r\n                    productName: response.data.productName,\r\n        quantity:response.data.quantity ,\r\n        deliveryAddress:response.data.deliveryAddress,\r\n        branchCity:response.data.branchCity,\r\n        branchState:response.data.branchState,\r\n        event:response.data.event,\r\n        nameOnTheCard:response.data.nameOnTheCard,\r\n        cvv:response.data.cvv,\r\n        expiryDate:response.data.expiryDate,\r\n        cardNo:response.data.cardNo\r\n                  \r\n            });\r\n        }\r\n    }).catch((error) => {\r\n        console.error(\"Error -\"+error);\r\n    });\r\n};\r\n        \r\n\r\n    resetOrder = () => {\r\n        this.setState(() => this.initialState);\r\n    };\r\n\r\n    submitOrder = event => {\r\n        event.preventDefault();\r\n\r\n        const order = {\r\n            \r\n                   \r\n                    productName: this.state.productName,\r\n                    quantity:this.state.quantity ,\r\n                    deliveryAddress:this.state.deliveryAddress,\r\n                    branchCity:this.state.branchCity,\r\n                    branchState:this.state.branchState,\r\n                    event:this.state.event,\r\n                    nameOnTheCard:this.state.nameOnTheCard,\r\n                    cvv:this.state.cvv,\r\n                    expiryDate:this.state.expiryDate,\r\n                    cardNo:this.state.cardNo\r\n                   \r\n        };\r\n\r\n        axios.post(\"http://localhost:8081/rest/orders\", order)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\"show\":true, \"method\":\"post\"});\r\n                    setTimeout(() => this.setState({\"show\":false}),3000);\r\n                } else {\r\n                    this.setState({\"show\":false});\r\n                }\r\n            });\r\n            this.setState(this.initialState);\r\n        };\r\n\r\n    updateSweet = event => {\r\n        event.preventDefault();\r\n\r\n        const order = {\r\n                    id: this.state.id,\r\n                    roductName: this.state.productName,\r\n                    quantity:this.state.quantity ,\r\n                    deliveryAddress:this.state.deliveryAddress,\r\n                    branchCity:this.state.branchCity,\r\n                    branchState:this.state.branchState,\r\n                    event:this.state.event,\r\n                    nameOnTheCard:this.state.nameOnTheCard,\r\n                    cvv:this.state.cvv,\r\n                    expiryDate:this.state.expiryDate,\r\n                    cardNo:this.state.cardNo\r\n                   \r\n        };\r\n        axios.put(\"http://localhost:8081/rest/orders\", order)\r\n        .then(response => {\r\n            if(response.data != null) {\r\n                this.setState({\"show\":true, \"method\":\"put\"});\r\n                setTimeout(() => this.setState({\"show\":false}), 3000);\r\n                setTimeout(() => this.orderList(), 3000);\r\n            } else {\r\n                this.setState({\"show\":false});\r\n            }\r\n        });\r\n\r\n    this.setState(this.initialState);\r\n};\r\n        \r\n\r\n    orderChange = event => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        });\r\n    };\r\n\r\n    orderList = () => {\r\n        return this.props.history.push(\"/listOrder\");\r\n    };\r\n\r\n\r\n    render() {\r\n        const { productName,quantity,\r\n        deliveryAddress,\r\n        branchCity,\r\n        branchState,\r\n        event,\r\n        nameOnTheCard,\r\n        cvv,\r\n        expiryDate,\r\n        cardNo} = this.state;\r\n        \r\n        return (\r\n            \r\n                \r\n               <div className=\"background-display\">\r\n                   <h2><b><u><center>PLACE ORDER</center></u></b></h2><br />\r\n                   <div class=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                       \r\n                       <form onSubmit={this.handleSubmit} autocomplete=\"off\" >\r\n                <label className=\"Label\"> <b>Product Name:</b> <span style={{ \"color\": \"red\" }}>*</span></label>\r\n                                        <select style={{ \"width\": \"100%\", \"padding\": \"7px 7px\" }}\r\n                                            name=\"productName\"  placeholder=\"ProductName\" className=\"form-control\"\r\n                                            onChange={this.handleInputChange}> <option>Choose The Sweet Product</option>\r\n                                            <option>Gulab Jamun</option>\r\n                                            <option>Jelabi</option>\r\n                                            <option>Mysorepak</option>\r\n                                            <option>RasaGulla</option>\r\n                                            <option>Thirunelveli Halwa</option>\r\n                                            <option>SoanPapdi</option>\r\n                                            <option value={this.state.ProductName}\r\n                                                        onChange={this.handleInputChange} >{this.ProductName}\r\n                                                    </option>)\r\n                                            \r\n                                        </select><br />\r\n\r\n                            <label className=\"Label\"> <b>Quantity:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                            <input type=\"number\" name=\"quantity\" placeholder=\"Quantity In gms\" class=\"form-control\" min=\"0.25\" max=\"10.0\" \r\n                             onChange={this.handleInputChange} value={this.state.Quantity} required/><br />\r\n\r\n                            <label className=\"Label\"> <b>Delivery Address:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                            <input type=\"text\" name=\"deliveryAddress\" placeholder=\"Delivery Address\" class=\"form-control\"\r\n                             onChange={this.handleInputChange} value={this.state.DeliveryAddress} required/><br />\r\n\r\n               \r\n                            <label className=\"Label\"> <b>Branch City:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                                        <select style={{ \"width\": \"100%\", \"padding\": \"7px 7px\" }} placeholder=\"Branch City\"\r\n                                            name=\"branchCity\" className=\"form-control\"\r\n                                            onChange={this.handleInputChange}> <option>Choose Branch City</option>\r\n                                            <option>Coimbatore</option>\r\n                                            <option>Banglore</option>\r\n                                            <option>Pune</option>\r\n                                               \r\n                                                    <option value={this.state.branchCity}\r\n                                                        onChange={this.handleInputChange} >{this.branchCity}\r\n                                                    </option>)\r\n                                            \r\n                                        </select><br />\r\n\r\n                            <label className=\"Label\"> <b>Branch State:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                                        <select style={{ \"width\": \"100%\", \"padding\": \"7px 7px\" }} placeholder=\"Branch State\"\r\n                                            name=\"branchState\" className=\"form-control\"\r\n                                            onChange={this.handleInputChange}> <option>Choose Branch State</option>\r\n                                            <option>TamilNadu</option>\r\n                                            <option>Kerala</option>\r\n                                            <option>Karnataka</option>\r\n                                            <option>Maharastra</option>\r\n                                               \r\n                                                    <option value={this.state.branchState}\r\n                                                        onChange={this.handleInputChange} >{this.branchState}\r\n                                                    </option>)\r\n                                            \r\n                                        </select><br />\r\n\r\n                            <label className=\"Label\"> <b>Event:</b></label>\r\n                                        <select style={{ \"width\": \"100%\", \"padding\": \"7px 7px\" }} placeholder=\"Event\"\r\n                                            name=\"event\" className=\"form-control\"\r\n                                            onChange={this.handleInputChange}> <option>Choose The Event</option>\r\n                                            <option>Bachelor Party</option>\r\n                                             <option>Marriage</option>\r\n                                             <option>Birthday</option>\r\n                                               \r\n                                                    <option value={this.state.event}\r\n                                                        onChange={this.handleInputChange} >{this.event}\r\n                                                    </option>)\r\n                                            \r\n                                        </select><br />\r\n\r\n                            <label className=\"Label\"> <b>Name On The Card:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                            <input type=\"text\" name=\"nameOnTheCard\" placeholder=\"Name On The Card\" class=\"form-control\"\r\n                             onChange={this.handleInputChange} value={this.state.NameOnTheCard} required/><br />\r\n\r\n                            <label className=\"Label\"> <b>Cvv:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                            <input type=\"tel\" name=\"cvv\"  minLength=\"3\" maxLength=\"3\" placeholder=\"Enter CVV Number\" class=\"form-control\"\r\n                             onChange={this.handleInputChange} value={this.state.Cvv} required/><br />\r\n\r\n                            <label className=\"Label\"> <b>Expiry Date:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                            <input type=\"text\" name=\"expiryDate\" pattern=\"(?:0[1-9]|1[0-2])/[0-9]{2}\" placeholder=\"Enter Expiry Date MM/YY\" class=\"form-control\"\r\n                             onChange={this.handleInputChange} value={this.state.ExpiryDate} required/><br />\r\n\r\n                            <label className=\"Label\"> <b>Card No:</b><span style={{ \"color\": \"red\" }}>*</span></label>\r\n                            <input type=\"tel\" name=\"cardNo\" minLength=\"16\" maxLength=\"16\" placeholder=\"Enter The Card Number\" class=\"form-control\" \r\n                             onChange={this.handleInputChange} value={this.state.CardNo} required/><br />\r\n\r\n                \r\n                             \r\n\r\n                \r\n\r\n\r\n\r\n            \r\n                       <center>  <button type=\"submit\" class=\"btn btn-success\" >Place Order Now</button> <tab/><tab/><tab/>\r\n                            \r\n                         <button type=\"submit\" class=\"btn btn-success\" >Confirm Order</button> <tab/><tab/><tab/> \r\n                       \r\n                            <button type=\"submit\" class=\"btn btn-success\" >Add Another Order</button></center> \r\n                        </form>\r\n        \r\n                       \r\n                    </div>\r\n                </div>\r\n                \r\n            \r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default PlaceOrder;\r\n       \r\n */\r\n   ","D:\\Teams\\Preethi\\New folder\\src\\serviceWorker.js",[],"D:\\Teams\\Preethi\\New folder\\src\\services\\store.js",[],"D:\\Teams\\Preethi\\New folder\\src\\services\\rootReducer.js",[],"D:\\Teams\\Preethi\\New folder\\src\\services\\user\\auth\\authReducer.js",[],"D:\\Teams\\Preethi\\New folder\\src\\Component\\SweetActions.js",["129"],"import React, {Component} from 'react';\r\nimport {Card, Table,  ButtonGroup, Button} from 'react-bootstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faList, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport {Link} from 'react-router-dom';\r\nimport MyToast from './MyToast';\r\nimport axios from 'axios';\r\n\r\nexport default class SweetActions extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sweets : []\r\n            \r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.findAllSweets();\r\n    }\r\n\r\n    findAllSweets(){\r\n        axios.get(\"http://localhost:8081/rest/sweets\")\r\n            .then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({sweets: data});\r\n            });\r\n    };\r\n\r\n   \r\n\r\n    deleteSweet = (sweetId) => {\r\n        axios.delete(\"http://localhost:8081/rest/sweets/\"+sweetId)\r\n        .then(response => {\r\n            if(response.data != null) {\r\n                this.setState({\"show\":true});\r\n                setTimeout(() => this.setState({\"show\":false}),3000);\r\n                this.setState({\r\n                    sweets:this.state.sweets.filter(sweet => sweet.id !== sweetId)\r\n                });\r\n            } else {\r\n                this.setState({\"show\":false});\r\n            }\r\n        } );\r\n        \r\n   \r\n    };\r\n\r\n    render() {\r\n        \r\n        return (\r\n           <div>\r\n                <div style={{\"display\":this.state.show ? \"block\" : \"none\"}}>\r\n                   <MyToast show = {this.state.show} message = {\"Sweet Deleted Successfully.\"} type = {\"danger\"}/>\r\n                </div>\r\n                <Card className={\"border border-dark bg-dark text-white\"}>\r\n                    <Card.Header>\r\n                        \r\n                            <FontAwesomeIcon icon={faList} /> Sweet List\r\n                     </Card.Header>\r\n                 \r\n                    <Card.Body>\r\n                        <Table bordered hover striped variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                  <th>Category Name</th>\r\n                                  <th>Product Name</th>\r\n                                  <th> Product Rate </th>\r\n                                  <th>Offer Name</th>\r\n                                  <th>Offer Rate</th>\r\n                                  <th>Image URL</th>\r\n                                  <th>Actions</th> \r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {\r\n                                   this.state. sweets.length === 0 ?\r\n                                    <tr align=\"center\">\r\n                                      <td colSpan=\"6\">No Sweets Available.</td>\r\n                                    </tr> :\r\n                                   this.state.sweets.map((sweet) => (\r\n                                    <tr key={sweet.id}>\r\n                                        \r\n                                        <td>{sweet.categoryName}</td>\r\n                                        <td>{sweet.productName}</td>\r\n                                        <td>{sweet.rate}</td>\r\n                                        <td>{sweet.offerName}</td>\r\n                                        <td>{sweet.offerRate}</td>\r\n                                        <td>{sweet.image121}</td>\r\n                                         <td>\r\n                                            <ButtonGroup>\r\n                                                <Link to={\"editSweet/\"+sweet.id} className=\"btn btn-sm btn-outline-primary\"><FontAwesomeIcon icon={faEdit} /></Link>{' '}\r\n                                                <Button size=\"sm\" variant=\"outline-danger\" onClick={this.deleteSweet.bind(this, sweet.id)}><FontAwesomeIcon icon={faTrash} /></Button>\r\n                                            </ButtonGroup>\r\n                                        </td> \r\n                                    </tr>\r\n                                    ))\r\n                                }\r\n                              </tbody>\r\n                        </Table>\r\n                    </Card.Body>\r\n                    {/* <Card.Footer style={{\"textAlign\":\"right\"}}>\r\n                    <Link to={\"addOrder\"} className=\"nav-link\">Proceed to Order</Link>\r\n                  \r\n                    </Card.Footer> */}\r\n                    <Card.Footer style={{\"textAlign\":\"left\"}}>\r\n                    <Link to={\"/\"} className=\"nav-link\">HomePage</Link>\r\n                  \r\n                    </Card.Footer>\r\n                   \r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","D:\\Teams\\Preethi\\New folder\\src\\Component\\LoginCust.js",["130"],"import React from 'react';\r\nimport UserService from '../Service/UserService';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Login extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            user : {}\r\n        }\r\n\r\n        this.changeEmailHandler = this.changeEmailHandler.bind(this);\r\n        this.changePasswordHandler = this.changePasswordHandler.bind(this);\r\n        this.validateLogin = this.validateLogin.bind(this);\r\n        this.cancel = this.cancel.bind(this);\r\n    }\r\n    \r\n    changePasswordHandler= (event) => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    changeEmailHandler= (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    validateLogin = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        let login = {\r\n            email: this.state.email,\r\n            password : this.state.password\r\n        };\r\n        console.log('login => ' + JSON.stringify(login));\r\n\r\n       \r\n        UserService.login(login).then( (res) =>{\r\n            \r\n           if(res.status===200)\r\n            {\r\n                this.setState({ user: res.data});\r\n                localStorage.setItem(\"token\",this.state.user.uid);\r\n                console.log(\"user=>\" + JSON.stringify(this.state.user));\r\n                this.props.history.push('/SweetList');\r\n            }\r\n        })\r\n        .catch( (error) => {\r\n            console.log(\"Please Enter Correct Email and Password\");\r\n            console.log(error.response);\r\n            document.getElementById('errorMsg').innerHTML=error.response.data;\r\n        });\r\n    }\r\n\r\n    cancel = () =>{\r\n        this.props.history.push('/loginCust');\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                \r\n            <div className=\"bgLogin\">\r\n            <form className=\"form1\">\r\n                <h2>User Login</h2>\r\n                \r\n                <div id='errorMsg' className=\"text-danger font-weight-bold\"></div>\r\n                \r\n                <div className=\"form-group\">\r\n                    <label>Email address:</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" \r\n                    value={this.state.email} onChange={this.changeEmailHandler}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Password:</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" \r\n                    value={this.state.password} onChange={this.changePasswordHandler}/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={this.validateLogin}>Submit</button>\r\n                <button type=\"reset\" className=\"btn btn-danger ml-3\" onClick={this.cancel}>Cancel</button>\r\n                <br></br>\r\n                {/* <div className=\"ml-auto mt-2\">\r\n                <Link to=\"/forgetPassword\" ><u>Forget Password?</u></Link>\r\n                </div> */}\r\n            </form>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;","D:\\Teams\\Preethi\\New folder\\src\\Component\\Signup.js",[],"D:\\Teams\\Preethi\\New folder\\src\\Service\\UserService.js",[],"D:\\Teams\\Preethi\\New folder\\src\\Component\\CustomerNav.js",["131"],"D:\\Teams\\Preethi\\New folder\\src\\Component\\Sweet.js",[],"D:\\Teams\\Preethi\\New folder\\src\\Component\\Login.js",[],"D:\\Teams\\Preethi\\New folder\\src\\Component\\Logout.js",[],"D:\\Teams\\Preethi\\New folder\\src\\Component\\User.js",["132","133"],"import CustomerNav from \"./CustomerNav\";\r\nimport { BrowserRouter as Router, Route, Switch,Link,NavLink } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport Logout from \"./Logout\";\r\nimport Sweet from './Component/Sweet';\r\n\r\n\r\nclass Customer extends Component {\r\n    state = {};\r\n    render() {\r\n      return (\r\n          <div >\r\n              \r\n        \r\n          <Router>\r\n            <CustomerNav />\r\n            <b><i><center>Admin  Page</center></i></b>\r\n            \r\n           <Switch>\r\n           \r\n                <Route exact path=\"/logout\" component={Logout}  />\r\n             \r\n              <Route exact path=\"/addSweet\" component={Sweet}  />\r\n \r\n              \r\n            </Switch>\r\n         </Router>\r\n         </div>\r\n        \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Customer;","D:\\Teams\\Preethi\\New folder\\src\\Component\\UserNav.js",["134"],"import React, { Component } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nclass UserNav extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-secondary\">\r\n        \r\n\r\n        <div className=\"collapse navbar-collapse\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link active\" exact to=\"/addSweet\">\r\n                Manage Sweet\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link active\" exact to=\"/OrderActions\">\r\n               Order Details\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" exact to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </li>\r\n            \r\n          </ul>\r\n        </div>\r\n        \r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserNav;","D:\\Teams\\Preethi\\New folder\\src\\Component\\OrderActions.js",["135"],"import React, {Component} from 'react';\r\nimport {Card, Table,  ButtonGroup, Button} from 'react-bootstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faList, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport {Link} from 'react-router-dom';\r\nimport MyToast from './MyToast';\r\nimport axios from 'axios';\r\n\r\nexport default class OrderActions extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orders : []\r\n            \r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.findAllOrders();\r\n    }\r\n\r\n    findAllOrders(){\r\n        axios.get(\"http://localhost:8081/rest/orders\")\r\n            .then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({orders: data});\r\n            });\r\n    };\r\n\r\n   \r\n\r\n    deleteOrder = (orderId) => {\r\n        axios.delete(\"http://localhost:8081/rest/orders/\"+orderId)\r\n        .then(response => {\r\n            if(response.data != null) {\r\n                this.setState({\"show\":true});\r\n                setTimeout(() => this.setState({\"show\":false}),3000);\r\n                this.setState({\r\n                    orders:this.state.orders.filter(order => order.id !== orderId)\r\n                });\r\n            } else {\r\n                this.setState({\"show\":false});\r\n            }\r\n        } );\r\n        \r\n   \r\n    };\r\n\r\n    render() {\r\n        \r\n        return (\r\n           <div>\r\n                <div style={{\"display\":this.state.show ? \"block\" : \"none\"}}>\r\n                   <MyToast show = {this.state.show} message = {\"Order Deleted Successfully.\"} type = {\"danger\"}/>\r\n                </div>\r\n                <Card className={\"border border-dark bg-dark text-white\"}>\r\n                    <Card.Header>\r\n                        \r\n                            <FontAwesomeIcon icon={faList} /> Order List\r\n                     </Card.Header>\r\n                 \r\n                    <Card.Body>\r\n                        <Table bordered hover striped variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                  \r\n                                  <th>Product Name</th>\r\n                                 \r\n                                  <th> Quantity </th>\r\n                                  <th>DeliveryAddress</th>\r\n                                  <th>Branch City</th>\r\n                                  <th>Branch State</th>\r\n\t\t\t\t  <th>Event</th>\r\n                                  <th>Name On The Card</th>\r\n                                  <th>Cvv</th>\r\n                                  <th>Expiry Date</th>\r\n                                  <th>Card No</th>\r\n                                  <th>Actions</th> \r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {\r\n                                   this.state. orders.length === 0 ?\r\n                                    <tr align=\"center\">\r\n                                      <td colSpan=\"6\">No Orders Available.</td>\r\n                                    </tr> :\r\n                                   this.state.orders.map((order) => (\r\n                                    <tr key={order.id}>\r\n                                        \r\n                                        <td>{order.productName}</td>\r\n                                        <td>{order.quantity}</td>\r\n                                        <td>{order.deliveryAddress}</td>\r\n                                        <td>{order.branchCity}</td>\r\n                                        <td>{order.branchState}</td>\r\n\t\t\t\t\t                    <td>{order.event}</td>\r\n                                        <td>{order.nameOnTheCard}</td>\r\n                                        <td>{order.cvv}</td>\r\n                                        <td>{order.expiryDate}</td>\r\n                                        <td>{order.cardNo}</td>\r\n                                         <td>\r\n                                            <ButtonGroup>\r\n                                                <Link to={\"editOrder/\"+order.id} className=\"btn btn-sm btn-outline-primary\"><FontAwesomeIcon icon={faEdit} /></Link>{' '}\r\n                                                <Button size=\"sm\" variant=\"outline-danger\" onClick={this.deleteOrder.bind(this, order.id)}><FontAwesomeIcon icon={faTrash} /></Button>\r\n                                            </ButtonGroup>\r\n                                        </td> \r\n                                    </tr>\r\n                                    ))\r\n                                }\r\n                              </tbody>\r\n                        </Table>\r\n                    </Card.Body>\r\n                    {/* <Card.Footer style={{\"textAlign\":\"right\"}}>\r\n                    <Link to={\"addOrder\"} className=\"nav-link\">Proceed to Order</Link>\r\n                  \r\n                    </Card.Footer> */}\r\n                    <Card.Footer style={{\"textAlign\":\"left\"}}>\r\n                    <Link to={\"/\"} className=\"nav-link\">HomePage</Link>\r\n                  \r\n                    </Card.Footer>\r\n                   \r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}",{"ruleId":"136","severity":1,"message":"137","line":17,"column":50,"nodeType":"138","messageId":"139","endLine":17,"endColumn":54},{"ruleId":"136","severity":1,"message":"140","line":17,"column":55,"nodeType":"138","messageId":"139","endLine":17,"endColumn":62},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":45,"column":20,"nodeType":"147","endLine":50,"endColumn":47},{"ruleId":"136","severity":1,"message":"137","line":5,"column":19,"nodeType":"138","messageId":"139","endLine":5,"endColumn":23},{"ruleId":"148","severity":1,"message":"149","line":10,"column":10,"nodeType":"147","endLine":10,"endColumn":38},{"ruleId":"136","severity":1,"message":"150","line":6,"column":31,"nodeType":"138","messageId":"139","endLine":6,"endColumn":37},{"ruleId":"136","severity":1,"message":"151","line":6,"column":39,"nodeType":"138","messageId":"139","endLine":6,"endColumn":45},{"ruleId":null,"fatal":true,"severity":2,"message":"152","line":266,"column":1},{"ruleId":"153","severity":1,"message":"154","line":81,"column":36,"nodeType":"155","messageId":"156","endLine":81,"endColumn":54,"fix":"157"},{"ruleId":"136","severity":1,"message":"137","line":4,"column":9,"nodeType":"138","messageId":"139","endLine":4,"endColumn":13},{"ruleId":"136","severity":1,"message":"137","line":2,"column":19,"nodeType":"138","messageId":"139","endLine":2,"endColumn":23},{"ruleId":"136","severity":1,"message":"137","line":2,"column":49,"nodeType":"138","messageId":"139","endLine":2,"endColumn":53},{"ruleId":"136","severity":1,"message":"140","line":2,"column":54,"nodeType":"138","messageId":"139","endLine":2,"endColumn":61},{"ruleId":"136","severity":1,"message":"137","line":2,"column":19,"nodeType":"138","messageId":"139","endLine":2,"endColumn":23},{"ruleId":"153","severity":1,"message":"158","line":88,"column":36,"nodeType":"155","messageId":"156","endLine":88,"endColumn":54,"fix":"159"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","no-native-reassign",["160"],"no-negated-in-lhs",["161"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'faUndo' is defined but never used.","'faList' is defined but never used.","Parsing error: Only one default export allowed per module.\n\n\u001b[0m \u001b[90m 264 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 265 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 266 | \u001b[39m\u001b[36mexport\u001b[39m \u001b[36mdefault\u001b[39m \u001b[33mPlaceOrder\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 267 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 268 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 269 | \u001b[39m\u001b[90m/*import React, { Component } from 'react';\u001b[39m\u001b[0m","no-whitespace-before-property","Unexpected whitespace before property sweets.","MemberExpression","unexpectedWhitespace",{"range":"162","text":"163"},"Unexpected whitespace before property orders.",{"range":"164","text":"163"},"no-global-assign","no-unsafe-negation",[2754,2756],".",[3031,3033]]